

<web-app>
	<display-name>Archetype Created Web Application</display-name>


	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext.xml
		</param-value>
	</context-param>

	<!-- Spring ioc 的入口 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- 自定义的监听器 获取 一些Spring的上下文内容 -->
	<listener>
		<listener-class>justin.listener.InitDataListener</listener-class>
	</listener>

	<!-- 自定义的监听器 获取 统计在线人数 -->
	<listener>
		<listener-class>justin.listener.SessionListener</listener-class>
	</listener>


	<!-- 自定义的监听器 当网站用户量增加时，session占用的内存会越来越大，这时session的管理，将会是一项很大的系统开销，为了高效的管理session，我们可以写一个监听器，定期清理掉过期的session -->
	<listener>
		<listener-class>justin.listener.SessionScanerListener</listener-class>
	</listener>


	<!-- java restful 支持框架 jersey -->
	<servlet>
		<servlet-name>jersey-servlet</servlet-name>
		<servlet-class>
			org.glassfish.jersey.servlet.ServletContainer
		</servlet-class>
		<init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>justin</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>jersey-servlet</servlet-name>
		<url-pattern>/restful/*</url-pattern>
	</servlet-mapping>


	<!-- 自定义测试过滤器 -->
	<filter>
		<filter-name>CustomFilter</filter-name>
		<filter-class>justin.filter.CustomFilter</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>whitelist</param-name>
			<param-value>
				interceptor-service/getTest,filter-service/getFilterWhiteListTest
			</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CustomFilter</filter-name>
		<url-pattern>/restful/justin/*</url-pattern>
	</filter-mapping>


	<!-- 字符编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

</web-app>
